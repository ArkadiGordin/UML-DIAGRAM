@startuml

actor Пользователь
actor Персонал

participant "Веб-сайт" as Website
participant "Корзина" as Cart
participant "Оплата" as Payment
participant "Служба доставки" as Delivery
participant "Служба возврата" as Return
participant "Доставщик" as Courier

' Истории пользователей
note right of Пользователь
  1. Как покупатель, я хочу иметь возможность просматривать каталог товаров, чтобы выбрать интересующие меня продукты.
  2. Как покупатель, я хочу добавлять выбранные товары в корзину, чтобы собрать все необходимые покупки перед оформлением заказа.
  3. Как покупатель, я хочу редактировать количество товаров в корзине, чтобы заказать нужное мне количество каждого продукта.
  4. Как покупатель, я хочу удалять товары из корзины, чтобы исключить ненужные позиции перед оформлением заказа.
  5. Как покупатель, я хочу иметь возможность выбирать способ доставки, чтобы получить товар наиболее удобным для меня способом.
  6. Как покупатель, я хочу выбирать способ оплаты, чтобы оплатить заказ наиболее удобным для меня способом.
  7. Как покупатель, я хочу получать уведомления о статусе моего заказа, чтобы быть в курсе этапов его обработки и доставки.
  8. Как покупатель, я хочу иметь возможность просматривать историю моих заказов, чтобы отслеживать предыдущие покупки и при необходимости повторять их.
  9. Как покупатель, я хочу оставлять отзывы о приобретенных товарах, чтобы поделиться своим опытом с другими покупателями.
  10. Как покупатель, я хочу иметь возможность инициировать возврат товара, чтобы вернуть или обменять неподходящий или дефектный продукт.
end note

' Истории персонала
note left of Персонал
  1. Как менеджер по продукту, я хочу добавлять и обновлять информацию о товарах, чтобы поддерживать актуальность каталога для покупателей.
  2. Как менеджер по заказам, я хочу просматривать и обрабатывать поступившие заказы, чтобы обеспечить своевременную их обработку и выполнение.
  3. Как сотрудник службы поддержки, я хочу иметь доступ к информации о заказах и клиентах, чтобы эффективно решать возникающие у покупателей вопросы и проблемы.
  4. Как менеджер по доставке, я хочу назначать курьеров на заказы, чтобы обеспечить своевременную доставку товаров покупателям.
  5. Как курьер, я хочу получать информацию о назначенных мне заказах и маршрутах доставки, чтобы эффективно выполнять свои обязанности.
  6. Как администратор системы, я хочу управлять учетными записями пользователей и правами доступа, чтобы обеспечить безопасность и правильное функционирование системы.
  7. Как менеджер по возвратам, я хочу обрабатывать запросы на возврат товаров, чтобы обеспечить удовлетворенность клиентов и соблюдение политики компании.
  8. Как аналитик, я хочу получать отчеты о продажах и поведении пользователей, чтобы принимать обоснованные решения по улучшению сервиса.
  9. Как маркетолог, я хочу управлять акциями и скидками на сайте, чтобы привлекать новых клиентов и стимулировать повторные покупки.
  10. Как тестировщик, я хочу проверять новые функции и исправления, чтобы гарантировать качество и стабильность работы веб-сайта.
end note

Пользователь -> Website: Открывает сайт
Пользователь -> Website: Просматривает товары
Пользователь -> Website: Добавляет товар в корзину
Website -> Cart: Обновляет содержимое корзины

Пользователь -> Cart: Просматривает корзину
Пользователь -> Website: Оформляет заказ
Website -> Payment: Перенаправление на оплату
Payment -> Пользователь: Запрашивает данные карты
Пользователь -> Payment: Вводит данные карты
Payment -> Website: Подтверждение оплаты

Website -> Delivery: Отправка данных для доставки
Delivery -> Courier: Назначение доставщика
Courier -> Delivery: Подтверждение принятия заказа
Courier -> Пользователь: Оповещение о статусе доставки
Courier -> Delivery: Заказ доставлен
Delivery -> Пользователь: Подтверждение завершения доставки

...Позже...
Пользователь -> Return: Инициирует возврат товара
Return -> Пользователь: Подтверждение возврата

' Добавление классов, интерфейсов и наследования
package "Модели" {
  class Товар {
    - id: int
    - название: string
    - цена: float
    + getОписание(): string
    + getЦена(): float
  }
  class Корзина {
    - товары: List<Tовар>
    + добавитьТовар(товар: Товар): void
    + удалитьТовар(товар: Товар): void
    + очиститьКорзину(): void
  }
}

package "Платежная система" {
  interface ПлатежнаяСистема {
    + оплатить(сумма: float): boolean
  }
  class КредитнаяКарта implements ПлатежнаяСистема {
    + номерКарты: string
    + срокДействия: string
    + оплата(сумма: float): boolean
  }
  class PayPal implements ПлатежнаяСистема {
    + email: string
    + оплата(сумма: float): boolean
  }
}

package "Доставка" {
  abstract class Доставка {
    + рассчитатьСроки(): int
    + рассчитатьСтоимость(): float
  }
  class КурьерскаяДоставка extends Доставка {
    + рассчитатьСроки(): int
    + рассчитатьСтоимость(): float
  }
  class ПочтоваяДоставка extends Доставка {
    + рассчитатьСроки(): int
    + рассчитатьСтоимость(): float
  }
  class Доставщик {
    - id: int
    - имя: string
    + принятьЗаказ(заказ: Товар): void
    + обновитьСтатус(статус: string): void
  }
}

package "Возврат" {
  interface ПроцессВозврата {
    + инициироватьВозврат(): void
    + подтверждениеВозврата(): boolean
  }
  class ВозвратТовара implements ПроцессВозврата {
    + инициироватьВозврат(): void
    + подтверждениеВозврата(): boolean
  }
}

' Указание зависимости
Cart ..> Товар : содержит >
Пользователь --|> ВозвратТовара : инициирует >
Payment --> ПлатежнаяСистема : использует >
Delivery --> Доставка : использует >
Courier --> Доставка : работает с >

' Методы и доступ
Товар : - id : int
Товар : - название : string
Товар : - цена : float
Товар : + getОписание() : string
Товар : + getЦена() : float
Корзина : - товары : List<Tовар>
Корзина : + добавитьТовар(товар: Товар) : void
Корзина : + удалитьТовар(товар: Товар) : void
Корзина : + очиститьКорзину() : void

КредитнаяКарта : + номерКарты : string
КредитнаяКарта : + срокДействия : string
КредитнаяКарта : + оплатить(сумма: float) : boolean

PayPal : + email : string
PayPal : + оплата(сумма: float) : boolean

Доставка : + рассчитатьСроки() : int
Доставка : + рассчитатьСтоимость() : float

КурьерскаяДоставка : + рассчитатьСроки() : int
КурьерскаяДоставка : + рассчитатьСтоимость() : float

ПочтоваяДоставка : + рассчитатьСроки() : int
ПочтоваяДоставка : + рассчитатьСтоимость() : float

Доставщик : - id : int
Доставщик : - имя : string
Доставщик : + принятьЗаказ(заказ: Товар) : void
Доставщик : + обновитьСтатус(статус: string) : void

ВозвратТовара : + инициироватьВозврат() : void
ВозвратТовара : + подтверждениеВозврата() : boolean

' Примечания и шаблоны
note right of Пользователь
  Взаимодействие с сайтом
  и оформление заказа.
end note

note bottom of Корзина
  Добавление и удаление товаров
  из корзины покупок.
end note

@enduml
